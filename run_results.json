{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.14", "generated_at": "2024-07-02T05:13:14.787994Z", "invocation_id": "f77fc179-f949-48cd-bd51-c650e6946c45", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.395407Z", "completed_at": "2024-07-02T05:12:52.732841Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.759519Z", "completed_at": "2024-07-02T05:12:52.759573Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.39791345596313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.conte_it_dbt_data_quality.stg_notification_n_data", "compiled": true, "compiled_code": "select\n  applicationid as application_id,\n  userid as user_id,\n  procedureid as procedure_id,\n  currentstatus as current_status,\n  previousstatus as previous_status,\n  event,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(date)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as date,\n  rapporto,\n  sdd1,\n  sdd2,\n  totalunsolved as total_unsolved,\n  daysunsolved as days_unsolved,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(event_time)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as event_time,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(last_update)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as last_update,\n  cast(year || '-' || month || '-' || day as date) as reference_date,\n  year,\n  month,\n  day\n\nfrom \"awsdatacatalog\".\"notifications_n\".\"notification_n_data\"", "relation_name": "\"awsdatacatalog\".\"notifications_n\".\"stg_notification_n_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.380324Z", "completed_at": "2024-07-02T05:12:52.742185Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.760982Z", "completed_at": "2024-07-02T05:12:52.760996Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4007241725921631, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.conte_it_dbt_data_quality.stg_exelab_hubspot_n_step_checkpoints", "compiled": true, "compiled_code": "select\n  id,\n  applicationid as application_id,\n  hs_object_id,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(timestamp)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as timestamp,\n  step_checkpoint,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(dl_lastmodifieddate)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as dl_last_modified_date,\n  cast(parse_datetime(replace(substring(to_iso8601(from_iso8601_timestamp(lastupdate)),1,19),'T',' '),'yyyy-MM-dd HH:mm:ss') as timestamp) as last_update,\n  cast(year || '-' || month || '-' || day as date) as reference_date,\n  year,\n  month,\n  day\n\nfrom \"awsdatacatalog\".\"exelab_hubspot_n\".\"exelab_hubspot_n_step_checkpoints\"", "relation_name": "\"awsdatacatalog\".\"exelab_hubspot_n\".\"stg_exelab_hubspot_n_step_checkpoints\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.426290Z", "completed_at": "2024-07-02T05:12:52.743502Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.762314Z", "completed_at": "2024-07-02T05:12:52.762360Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.40057921409606934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_columns\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.478136Z", "completed_at": "2024-07-02T05:12:52.744277Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.763215Z", "completed_at": "2024-07-02T05:12:52.763226Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.400984525680542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as maturity\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('dummy_string' as varchar) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_exposures\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.400279Z", "completed_at": "2024-07-02T05:12:52.745168Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.763856Z", "completed_at": "2024-07-02T05:12:52.763865Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4040203094482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_name\n\n,\n                \n        cast(123456789.99 as DOUBLE) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar) as source_value\n\n,\n                cast('2091-02-17' as timestamp(6)) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp(6)) as bucket_end\n\n,\n                \n        cast(123456789 as INTEGER) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp(6)) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar) as dimension\n\n,\n                \n        cast('dummy_string' as varchar) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"data_monitoring_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.528444Z", "completed_at": "2024-07-02T05:12:52.747940Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.765897Z", "completed_at": "2024-07-02T05:12:52.765909Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.4024937152862549, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as command\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as vars\n\n,\n                \n        cast('dummy_string' as varchar) as target_name\n\n,\n                \n        cast('dummy_string' as varchar) as target_database\n\n,\n                \n        cast('dummy_string' as varchar) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as INTEGER) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar) as project_id\n\n,\n                \n        cast('dummy_string' as varchar) as project_name\n\n,\n                \n        cast('dummy_string' as varchar) as env\n\n,\n                \n        cast('dummy_string' as varchar) as env_id\n\n,\n                \n        cast('dummy_string' as varchar) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as cause\n\n,\n                \n        cast('dummy_string' as varchar) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar) as job_url\n\n,\n                \n        cast('dummy_string' as varchar) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_invocations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.567032Z", "completed_at": "2024-07-02T05:12:52.750382Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.766689Z", "completed_at": "2024-07-02T05:12:52.766699Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.403888463973999, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('dummy_string' as varchar) as model\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as sql\n\n,\n                \n        cast('dummy_string' as varchar) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.640629Z", "completed_at": "2024-07-02T05:12:52.755018Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:52.770972Z", "completed_at": "2024-07-02T05:12:52.771010Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.4076852798461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_models\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:52.805408Z", "completed_at": "2024-07-02T05:12:53.340399Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.351540Z", "completed_at": "2024-07-02T05:12:53.351551Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5641958713531494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as message\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as DOUBLE) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as query_id\n\n,\n                \n        cast('dummy_string' as varchar) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('dummy_string' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.089635Z", "completed_at": "2024-07-02T05:12:53.343140Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.357989Z", "completed_at": "2024-07-02T05:12:53.357999Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.5690922737121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_snapshots\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.150075Z", "completed_at": "2024-07-02T05:12:53.344842Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.358573Z", "completed_at": "2024-07-02T05:12:53.358581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5683197975158691, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as source_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as identifier\n\n,\n                \n        cast('dummy_string' as varchar) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_sources\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.264960Z", "completed_at": "2024-07-02T05:12:53.346730Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.359231Z", "completed_at": "2024-07-02T05:12:53.359238Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.5646712779998779, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.15.0' as dbt_pkg_version", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"metadata\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.115385Z", "completed_at": "2024-07-02T05:12:53.347504Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.359779Z", "completed_at": "2024-07-02T05:12:53.359786Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.5720229148864746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n,\n                \n        cast(123456789.99 as DOUBLE) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as error\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_source_freshness_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.028380Z", "completed_at": "2024-07-02T05:12:53.341679Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.360571Z", "completed_at": "2024-07-02T05:12:53.360579Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5773980617523193, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_seeds\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.204387Z", "completed_at": "2024-07-02T05:12:53.350630Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.361134Z", "completed_at": "2024-07-02T05:12:53.361141Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.5728371143341064, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp(6)) as detected_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_type\n\n,\n                \n        cast('dummy_string' as varchar) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar) as owners\n\n,\n                \n        cast('dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"elementary_test_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.173750Z", "completed_at": "2024-07-02T05:12:53.352444Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.362865Z", "completed_at": "2024-07-02T05:12:53.362872Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.5761992931365967, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as short_name\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.386445Z", "completed_at": "2024-07-02T05:12:53.434385Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.538184Z", "completed_at": "2024-07-02T05:12:53.538196Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.16646766662597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as timestamp(6)) as detected_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"schema_columns_snapshot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.455297Z", "completed_at": "2024-07-02T05:12:53.533686Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.541507Z", "completed_at": "2024-07-02T05:12:53.541516Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.16393661499023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.dbt_utils_source_accepted_range_cbs_offer_selected_n_cbs_offer_selected_n_data_amount__True__25000__1.145143c706", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount <= 25000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.413773Z", "completed_at": "2024-07-02T05:12:53.536560Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.547420Z", "completed_at": "2024-07-02T05:12:53.547429Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.14507246017456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_cbs_inventario_n_cbs_inventario_n_data_day__7__year_month_day.cf0d93d3d8", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.507980Z", "completed_at": "2024-07-02T05:12:53.535557Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.548036Z", "completed_at": "2024-07-02T05:12:53.548044Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.16920757293701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_accertify_n_accertify_n_data_day__7__year_month_day.cd4a8adc9f", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.490185Z", "completed_at": "2024-07-02T05:12:53.537373Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.548831Z", "completed_at": "2024-07-02T05:12:53.548838Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.17231988906860352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.dbt_utils_source_accepted_range_cbs_offer_selected_n_cbs_offer_selected_n_data_installmentscnt__False__0.98174a2189", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not installmentscnt > 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.424168Z", "completed_at": "2024-07-02T05:12:53.533012Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.549525Z", "completed_at": "2024-07-02T05:12:53.549532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.17532801628112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n\n  \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.500010Z", "completed_at": "2024-07-02T05:12:53.534893Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.551045Z", "completed_at": "2024-07-02T05:12:53.551052Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17447614669799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.dbt_utils_source_accepted_range_cbs_offer_selected_n_cbs_offer_selected_n_data_taeg__False__0.e2e381d193", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not taeg > 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.516435Z", "completed_at": "2024-07-02T05:12:53.540905Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.551648Z", "completed_at": "2024-07-02T05:12:53.551654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.17984485626220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.566113Z", "completed_at": "2024-07-02T05:12:53.616784Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.673037Z", "completed_at": "2024-07-02T05:12:53.673050Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13096261024475098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_cbs_inventario_n_cbs_inventario_n_soluzione_tattica_day__7__year_month_day.9f9b522c26", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.601844Z", "completed_at": "2024-07-02T05:12:53.653424Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.677635Z", "completed_at": "2024-07-02T05:12:53.677644Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.1172800064086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_cbs_offer_selected_n_cbs_offer_selected_n_data_day__7__year_month_day.e9062b892e", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.635497Z", "completed_at": "2024-07-02T05:12:53.678273Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.685660Z", "completed_at": "2024-07-02T05:12:53.685670Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10062766075134277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_exelab_hubspot_n_exelab_hubspot_n_associations_day__7__year_month_day.afc2875793", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.646089Z", "completed_at": "2024-07-02T05:12:53.674625Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.687028Z", "completed_at": "2024-07-02T05:12:53.687035Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10216116905212402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_exelab_hubspot_n_exelab_hubspot_n_contacts_day__7__year_month_day.64648bab6f", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.630268Z", "completed_at": "2024-07-02T05:12:53.675489Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.687787Z", "completed_at": "2024-07-02T05:12:53.687795Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.1070094108581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_crif_n_v1_crif_n_event_history_day__7__year_month_day.52473ff857", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.621684Z", "completed_at": "2024-07-02T05:12:53.676147Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.688507Z", "completed_at": "2024-07-02T05:12:53.688514Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.12033724784851074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_cbs_scadenzario_n_cbs_scadenzario_n_soluzione_tattica_day__7__year_month_day.409595d399", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.654087Z", "completed_at": "2024-07-02T05:12:53.684814Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.701769Z", "completed_at": "2024-07-02T05:12:53.701778Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12005615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_exelab_hubspot_n_exelab_hubspot_n_deals_day__7__year_month_day.bdc808f631", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.663009Z", "completed_at": "2024-07-02T05:12:53.684175Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.714608Z", "completed_at": "2024-07-02T05:12:53.714619Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.13009071350097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_exelab_hubspot_n_exelab_hubspot_n_step_checkpoints_day__7__year_month_day.55a9d44cd2", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.718201Z", "completed_at": "2024-07-02T05:12:53.739796Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.787486Z", "completed_at": "2024-07-02T05:12:53.787499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09392714500427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_experian_n_experian_n_event_history_day__7__year_month_day.14fd27f8ee", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.734627Z", "completed_at": "2024-07-02T05:12:53.778194Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.806221Z", "completed_at": "2024-07-02T05:12:53.806231Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.09147143363952637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_scipafi_n_scipafi_n_data_day__7__year_month_day.1517214a3a", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.756356Z", "completed_at": "2024-07-02T05:12:53.790066Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.809692Z", "completed_at": "2024-07-02T05:12:53.809701Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.0978696346282959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_pol_offers_pre_approval_n_pol_offers_pre_approval_n_credit_management_day__7__year_month_day.1ccaf4f4ba", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.705722Z", "completed_at": "2024-07-02T05:12:53.746989Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.806920Z", "completed_at": "2024-07-02T05:12:53.806929Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.1213221549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_fido_n_fido_n_data_day__7__year_month_day.8ce236066f", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.779248Z", "completed_at": "2024-07-02T05:12:53.799679Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.824053Z", "completed_at": "2024-07-02T05:12:53.824062Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08542370796203613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_selections_n_selection_n_data_day__7__year_month_day.8bf926bf5f", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.748561Z", "completed_at": "2024-07-02T05:12:53.791545Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.826234Z", "completed_at": "2024-07-02T05:12:53.826243Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10720562934875488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_offers_n_offers_n_credit_management_day__7__year_month_day.5c8bce16a8", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.769442Z", "completed_at": "2024-07-02T05:12:53.793923Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.822879Z", "completed_at": "2024-07-02T05:12:53.822889Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.11936378479003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_notifications_n_notification_n_data_day__7__year_month_day.8d340fff90", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.794521Z", "completed_at": "2024-07-02T05:12:53.811176Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.834724Z", "completed_at": "2024-07-02T05:12:53.834733Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08354043960571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_address_day__7__reference_date.6eb6564898", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.811801Z", "completed_at": "2024-07-02T05:12:53.830141Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.854255Z", "completed_at": "2024-07-02T05:12:53.854263Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05638623237609863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_applicant_day__7__reference_date.b213daca3d", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.837385Z", "completed_at": "2024-07-02T05:12:53.856481Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.901695Z", "completed_at": "2024-07-02T05:12:53.901708Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10329961776733398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_applicant_status_day__7__reference_date.c12b11c8c0", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.862696Z", "completed_at": "2024-07-02T05:12:53.912887Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.934419Z", "completed_at": "2024-07-02T05:12:53.934430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10306239128112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_hubspot_contacts_day__7__year_month_day.4432dd2349", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.890594Z", "completed_at": "2024-07-02T05:12:53.933748Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.978386Z", "completed_at": "2024-07-02T05:12:53.978399Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.14402437210083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_application_day__7__reference_date.66301743f0", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.873946Z", "completed_at": "2024-07-02T05:12:53.929218Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:53.961860Z", "completed_at": "2024-07-02T05:12:53.961875Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.1549818515777588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_block_day__7__reference_date.6d756e1cae", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.902650Z", "completed_at": "2024-07-02T05:12:53.959583Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.006447Z", "completed_at": "2024-07-02T05:12:54.006461Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.16326141357421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_offer_day__7__reference_date.1899a5bc6e", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.935059Z", "completed_at": "2024-07-02T05:12:53.982573Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.022744Z", "completed_at": "2024-07-02T05:12:54.022753Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1610851287841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_rule_detail_day__7__reference_date.c13bc8e0f5", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.917631Z", "completed_at": "2024-07-02T05:12:53.954939Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.017284Z", "completed_at": "2024-07-02T05:12:54.017293Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.16697168350219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_request_day__7__reference_date.7aa0a014ed", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.962807Z", "completed_at": "2024-07-02T05:12:53.991120Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.028458Z", "completed_at": "2024-07-02T05:12:54.028469Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10062694549560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_freshness_anomalies_tech_model_rule_field_day__7__reference_date.85b5048915", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.009355Z", "completed_at": "2024-07-02T05:12:54.029506Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.044113Z", "completed_at": "2024-07-02T05:12:54.044123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09407901763916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_cbs_inventario_n_cbs_inventario_n_data_day__7__year_month_day.470135ed3b", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:53.985966Z", "completed_at": "2024-07-02T05:12:54.023449Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.062190Z", "completed_at": "2024-07-02T05:12:54.062203Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.13988828659057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_accertify_n_accertify_n_data_day__7__year_month_day.a36cdeb836", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.063620Z", "completed_at": "2024-07-02T05:12:54.133222Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.147839Z", "completed_at": "2024-07-02T05:12:54.147850Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.11893320083618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_cbs_inventario_n_cbs_inventario_n_soluzione_tattica_day__7__year_month_day.8c8021207e", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.046257Z", "completed_at": "2024-07-02T05:12:54.116966Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.151428Z", "completed_at": "2024-07-02T05:12:54.151438Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.13526368141174316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_cbs_offer_selected_n_cbs_offer_selected_n_data_day__7__year_month_day.71c744149f", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.085430Z", "completed_at": "2024-07-02T05:12:54.145360Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.169141Z", "completed_at": "2024-07-02T05:12:54.169151Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.148026704788208, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_cbs_scadenzario_n_cbs_scadenzario_n_soluzione_tattica_day__7__year_month_day.7c2e83960c", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.104624Z", "completed_at": "2024-07-02T05:12:54.143651Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.183019Z", "completed_at": "2024-07-02T05:12:54.183029Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.15130901336669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_crif_n_v1_crif_n_event_history_day__7__year_month_day.fcd1eb314c", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.133954Z", "completed_at": "2024-07-02T05:12:54.157978Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.193513Z", "completed_at": "2024-07-02T05:12:54.193521Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.14989113807678223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_exelab_hubspot_n_exelab_hubspot_n_contacts_day__7__year_month_day.a8f1f755d6", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.119672Z", "completed_at": "2024-07-02T05:12:54.149106Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.188595Z", "completed_at": "2024-07-02T05:12:54.188606Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.15520834922790527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_exelab_hubspot_n_exelab_hubspot_n_associations_day__7__year_month_day.f1b645708d", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.158952Z", "completed_at": "2024-07-02T05:12:54.185969Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.209959Z", "completed_at": "2024-07-02T05:12:54.209968Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.07485508918762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_exelab_hubspot_n_exelab_hubspot_n_step_checkpoints_day__7__year_month_day.86a5df127c", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.169934Z", "completed_at": "2024-07-02T05:12:54.189215Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.212359Z", "completed_at": "2024-07-02T05:12:54.212369Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08199286460876465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_exelab_hubspot_n_exelab_hubspot_n_deals_day__7__year_month_day.674bcb5aa1", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.199145Z", "completed_at": "2024-07-02T05:12:54.219696Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.253612Z", "completed_at": "2024-07-02T05:12:54.253623Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.09616541862487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_experian_n_experian_n_event_history_day__7__year_month_day.d589fac01a", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.233656Z", "completed_at": "2024-07-02T05:12:54.269180Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.289891Z", "completed_at": "2024-07-02T05:12:54.289901Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09366798400878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_notifications_n_notification_n_data_day__7__year_month_day.e69068a495", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.214614Z", "completed_at": "2024-07-02T05:12:54.233050Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.306123Z", "completed_at": "2024-07-02T05:12:54.306131Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09995412826538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_offers_n_offers_n_credit_management_day__7__year_month_day.3c845f84ad", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.243897Z", "completed_at": "2024-07-02T05:12:54.279768Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.307880Z", "completed_at": "2024-07-02T05:12:54.307888Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11362528800964355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_fido_n_fido_n_data_day__7__year_month_day.1837133307", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.280542Z", "completed_at": "2024-07-02T05:12:54.302704Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.311114Z", "completed_at": "2024-07-02T05:12:54.311122Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.07178759574890137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_selections_n_selection_n_data_day__7__year_month_day.48c51636a9", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.255867Z", "completed_at": "2024-07-02T05:12:54.291937Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.313942Z", "completed_at": "2024-07-02T05:12:54.313950Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10265350341796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_scipafi_n_scipafi_n_data_day__7__year_month_day.3af0290768", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.270096Z", "completed_at": "2024-07-02T05:12:54.305116Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.326922Z", "completed_at": "2024-07-02T05:12:54.326931Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10402035713195801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_pol_offers_pre_approval_n_pol_offers_pre_approval_n_credit_management_day__7__year_month_day.36f069b3d9", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.294608Z", "completed_at": "2024-07-02T05:12:54.310274Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.338459Z", "completed_at": "2024-07-02T05:12:54.338482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08942747116088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_address_day__7__reference_date.e8ef921b92", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.314725Z", "completed_at": "2024-07-02T05:12:54.332241Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.356747Z", "completed_at": "2024-07-02T05:12:54.356756Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.0853571891784668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_applicant_day__7__reference_date.0584cd5afb", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.339115Z", "completed_at": "2024-07-02T05:12:54.359102Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.407416Z", "completed_at": "2024-07-02T05:12:54.407426Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.08584070205688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_block_day__7__reference_date.36a4bebc23", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.359870Z", "completed_at": "2024-07-02T05:12:54.399288Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.432828Z", "completed_at": "2024-07-02T05:12:54.432838Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1061856746673584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_application_day__7__reference_date.97712ab74c", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.368900Z", "completed_at": "2024-07-02T05:12:54.401051Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.434151Z", "completed_at": "2024-07-02T05:12:54.434159Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1170353889465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_applicant_status_day__7__reference_date.c8b4913aef", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.402115Z", "completed_at": "2024-07-02T05:12:54.431383Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.457751Z", "completed_at": "2024-07-02T05:12:54.457760Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.128129243850708, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_request_day__7__reference_date.58bcf2cb41", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.378932Z", "completed_at": "2024-07-02T05:12:54.411454Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.438168Z", "completed_at": "2024-07-02T05:12:54.438177Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10653066635131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_hubspot_contacts_day__7__create_date.02289d5256", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.390195Z", "completed_at": "2024-07-02T05:12:54.413121Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.439698Z", "completed_at": "2024-07-02T05:12:54.439707Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.10553264617919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_offer_day__7__reference_date.fd20fbac5f", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.418337Z", "completed_at": "2024-07-02T05:12:54.442439Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.526721Z", "completed_at": "2024-07-02T05:12:54.526737Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.33130645751953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_rule_detail_day__7__reference_date.aa1289dbe7", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.444112Z", "completed_at": "2024-07-02T05:12:54.487689Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.773877Z", "completed_at": "2024-07-02T05:12:54.773888Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.43688011169433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_source_volume_anomalies_tech_model_rule_field_day__7__reference_date.e427bd5d85", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.464609Z", "completed_at": "2024-07-02T05:12:54.835267Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.885188Z", "completed_at": "2024-07-02T05:12:54.885199Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.44544553756713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_birth_country__ABW__AFG__AGO__AIA__ALA__ALB__AND__ARE__ARG__ARM__ASM__ATA__ATF__ATG__AUS__AUT__AZE__BDI__BEL__BEN__BES__BFA__BGD__BGR__BHR__BHS__BIH__BLM__BLR__BLZ__BMU__BOL__BRA__BRB__BRN__BTN__BVT__BWA__CAF__CAN__CCK__CHE__CHL__CHN__CIV__CMR__COD__COG__COK__COL__COM__CPV__CRI__CUB__CUW__CXR__CYM__CYP__CZE__DEU__DJI__DMA__DNK__DOM__DZA__ECU__EGY__ERI__ESH__ESP__EST__ETH__FIN__FJI__FLK__FRA__FRO__FSM__GAB__GBR__GEO__GGY__GHA__GIB__GIN__GLP__GMB__GNB__GNQ__GRC__GRD__GRL__GTM__GUF__GUM__GUY__HKG__HMD__HND__HRV__HTI__HUN__IDN__IMN__IND__IOT__IRL__IRN__IRQ__ISL__ISR__ITA__JAM__JEY__JOR__JPN__KAZ__KEN__KGZ__KHM__KIR__KNA__KOR__KWT__LAO__LBN__LBR__LBY__LCA__LIE__LKA__LSO__LTU__LUX__LVA__MAC__MAF__MAR__MCO__MDA__MDG__MDV__MEX__MHL__MKD__MLI__MLT__MMR__MNE__MNG__MNP__MOZ__MRT__MSR__MTQ__MUS__MWI__MYS__MYT__NAM__NCL__NER__NFK__NGA__NIC__NIU__NLD__NOR__NPL__NRU__NZL__OMN__PAK__PAN__PCN__PER__PHL__PLW__PNG__POL__PRI__PRK__PRT__PRY__PSE__PYF__QAT__REU__ROU__RUS__RWA__SAU__SDN__SEN__SGP__SGS__SHN__SJM__SLB__SLE__SLV__SMR__SOM__SPM__SRB__SSD__STP__SUR__SVK__SVN__SWE__SWZ__SXM__SYC__SYR__TCA__TCD__TGO__THA__TJK__TKL__TKM__TLS__TON__TTO__TUN__TUR__TUV__TWN__TZA__UGA__UKR__UMI__URY__USA__UZB__VAT__VCT__VEN__VGB__VIR__VNM__VUT__WLF__WSM__YEM__ZAF__ZMB__ZWE.8d8c3cc28e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        birth_country as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by birth_country\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ABW','AFG','AGO','AIA','ALA','ALB','AND','ARE','ARG','ARM','ASM','ATA','ATF','ATG','AUS','AUT','AZE','BDI','BEL','BEN','BES','BFA','BGD','BGR','BHR','BHS','BIH','BLM','BLR','BLZ','BMU','BOL','BRA','BRB','BRN','BTN','BVT','BWA','CAF','CAN','CCK','CHE','CHL','CHN','CIV','CMR','COD','COG','COK','COL','COM','CPV','CRI','CUB','CUW','CXR','CYM','CYP','CZE','DEU','DJI','DMA','DNK','DOM','DZA','ECU','EGY','ERI','ESH','ESP','EST','ETH','FIN','FJI','FLK','FRA','FRO','FSM','GAB','GBR','GEO','GGY','GHA','GIB','GIN','GLP','GMB','GNB','GNQ','GRC','GRD','GRL','GTM','GUF','GUM','GUY','HKG','HMD','HND','HRV','HTI','HUN','IDN','IMN','IND','IOT','IRL','IRN','IRQ','ISL','ISR','ITA','JAM','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KNA','KOR','KWT','LAO','LBN','LBR','LBY','LCA','LIE','LKA','LSO','LTU','LUX','LVA','MAC','MAF','MAR','MCO','MDA','MDG','MDV','MEX','MHL','MKD','MLI','MLT','MMR','MNE','MNG','MNP','MOZ','MRT','MSR','MTQ','MUS','MWI','MYS','MYT','NAM','NCL','NER','NFK','NGA','NIC','NIU','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PAN','PCN','PER','PHL','PLW','PNG','POL','PRI','PRK','PRT','PRY','PSE','PYF','QAT','REU','ROU','RUS','RWA','SAU','SDN','SEN','SGP','SGS','SHN','SJM','SLB','SLE','SLV','SMR','SOM','SPM','SRB','SSD','STP','SUR','SVK','SVN','SWE','SWZ','SXM','SYC','SYR','TCA','TCD','TGO','THA','TJK','TKL','TKM','TLS','TON','TTO','TUN','TUR','TUV','TWN','TZA','UGA','UKR','UMI','URY','USA','UZB','VAT','VCT','VEN','VGB','VIR','VNM','VUT','WLF','WSM','YEM','ZAF','ZMB','ZWE'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.776152Z", "completed_at": "2024-07-02T05:12:54.857887Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.901675Z", "completed_at": "2024-07-02T05:12:54.901687Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.40264439582824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_gender__M__F.74271b5e22", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        gender as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by gender\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'M','F'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.837800Z", "completed_at": "2024-07-02T05:12:54.872698Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.905118Z", "completed_at": "2024-07-02T05:12:54.905126Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.13516783714294434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_status_employment_status__PERMANENT_EMPLOYEE_FT__FIXED_TIME_EMPLOYEE_FT__PERMANENT_EMPLOYEE_PT__FIXED_TIME_EMPLOYEE_PT__SELF_EMPLOYED__STUDENT__PENSIONER__UNEMPLOYED__OTHER.49d1486b41", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        employment_status as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by employment_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PERMANENT_EMPLOYEE_FT','FIXED_TIME_EMPLOYEE_FT','PERMANENT_EMPLOYEE_PT','FIXED_TIME_EMPLOYEE_PT','SELF_EMPLOYED','STUDENT','PENSIONER','UNEMPLOYED','OTHER'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.790946Z", "completed_at": "2024-07-02T05:12:54.871484Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.904355Z", "completed_at": "2024-07-02T05:12:54.904364Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3705003261566162, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_status_company_industry__TRANSPORT__TOURISM__CONSTRUCTION__RETAIL_COMMERCE__PUB_AND_RESTAURANTS__OTHER__INDUSTRY_AND_PRODUCTION__PRIVATE_SERVICES__PUBLIC_OWNED_COMPANIES__PUBLIC_SECTOR__POLICE_AND_ARMED_FORCES.9179432409", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        company_industry as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by company_industry\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'TRANSPORT','TOURISM','CONSTRUCTION','RETAIL_COMMERCE','PUB_AND_RESTAURANTS','OTHER','INDUSTRY_AND_PRODUCTION','PRIVATE_SERVICES','PUBLIC_OWNED_COMPANIES','PUBLIC_SECTOR','POLICE_AND_ARMED_FORCES'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.852417Z", "completed_at": "2024-07-02T05:12:54.884508Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.924645Z", "completed_at": "2024-07-02T05:12:54.924654Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2550475597381592, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_status_company_size__MICRO__SMALL__MEDIUM__LARGE.289cce4f11", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        company_size as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by company_size\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MICRO','SMALL','MEDIUM','LARGE'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.873616Z", "completed_at": "2024-07-02T05:12:54.902380Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.927226Z", "completed_at": "2024-07-02T05:12:54.927236Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.16161131858825684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_applicant_status_late_payments__NEVER__ONE__TWO__MORE_THAN_TWO.2803215c8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        late_payments as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by late_payments\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'NEVER','ONE','TWO','MORE_THAN_TWO'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.887832Z", "completed_at": "2024-07-02T05:12:54.908000Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.933075Z", "completed_at": "2024-07-02T05:12:54.933083Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09285211563110352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_application_bureau_only_ko__YES__NO__true__false.6f52ba93cc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        bureau_only_ko as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"application\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by bureau_only_ko\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'YES','NO','true','false'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.908623Z", "completed_at": "2024-07-02T05:12:54.929787Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:54.966251Z", "completed_at": "2024-07-02T05:12:54.966262Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.13871383666992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_education_level__ELEMENTARY__SECONDARY__HIGH_SCHOOL_DIPLOMA__BACHELOR_DEGREE__MASTER_DEGREE__MASTER.a8c5b5cf63", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        education_level as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by education_level\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ELEMENTARY','SECONDARY','HIGH_SCHOOL_DIPLOMA','BACHELOR_DEGREE','MASTER_DEGREE','MASTER'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.938341Z", "completed_at": "2024-07-02T05:12:54.983692Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.083602Z", "completed_at": "2024-07-02T05:12:55.083619Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.2251415252685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_general_status__OK__REFERRED__KO__TECHNICAL_ERROR.f3a1cfa153", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        general_status as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by general_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OK','REFERRED','KO','TECHNICAL_ERROR'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.985147Z", "completed_at": "2024-07-02T05:12:55.053832Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.095380Z", "completed_at": "2024-07-02T05:12:55.095390Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.2186908721923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_insurance__Yes__No.afec0e7112", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        insurance as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by insurance\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Yes','No'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.966972Z", "completed_at": "2024-07-02T05:12:55.021220Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.121989Z", "completed_at": "2024-07-02T05:12:55.122006Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.22509360313415527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_marital_status__SINGLE__MARRIED_SEPARATION_PROPERTY__MARRIED_COMMUNION_PROPERTY__COHABITING__DIVORCED__SEPARATED__WIDOW_ER.67dc70f0f1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        marital_status as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by marital_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SINGLE','MARRIED_SEPARATION_PROPERTY','MARRIED_COMMUNION_PROPERTY','COHABITING','DIVORCED','SEPARATED','WIDOW_ER'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:54.953446Z", "completed_at": "2024-07-02T05:12:55.023745Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.151534Z", "completed_at": "2024-07-02T05:12:55.151545Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2355334758758545, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_home_status__OWNER__RENT__FAMILY__EMPLOYER__THIRD_PARTIES__OTHER__MORTGAGE.409fd1085a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        home_status as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by home_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OWNER','RENT','FAMILY','EMPLOYER','THIRD_PARTIES','OTHER','MORTGAGE'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.028912Z", "completed_at": "2024-07-02T05:12:55.093391Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.160001Z", "completed_at": "2024-07-02T05:12:55.160010Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.19337248802185059, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_people_with_income__ONE__TWO__THREE__FOUR__MORE.25da0e837b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        people_with_income as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by people_with_income\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ONE','TWO','THREE','FOUR','MORE'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.055369Z", "completed_at": "2024-07-02T05:12:55.133445Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.162194Z", "completed_at": "2024-07-02T05:12:55.162203Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.19945597648620605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_num_house_hold_members__ONE__TWO__THREE__FOUR__MORE.b9e3250cba", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        num_house_hold_members as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by num_house_hold_members\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'ONE','TWO','THREE','FOUR','MORE'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.100369Z", "completed_at": "2024-07-02T05:12:55.159343Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.189856Z", "completed_at": "2024-07-02T05:12:55.189869Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17663192749023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_purpose__DEBT_CONSOLIDATION__ESTHETICS_WELLBEING__MEDICAL_EXPENSES__STUDYING_TRAINING_COURSES__WEDDING__TRAVELS__OTHER__HOME_IMPROVEMENT__FURNITURE__REAL_ESTATE_BOX_PURCHASE__NEW_USED_MOTORBIKE__NEW_CAR__USED_CAR__LIQUIDITY.f44c31b856", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        purpose as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by purpose\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DEBT_CONSOLIDATION','ESTHETICS_WELLBEING','MEDICAL_EXPENSES','STUDYING_TRAINING_COURSES','WEDDING','TRAVELS','OTHER','HOME_IMPROVEMENT','FURNITURE','REAL_ESTATE_BOX_PURCHASE','NEW_USED_MOTORBIKE','NEW_CAR','USED_CAR','LIQUIDITY'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.164820Z", "completed_at": "2024-07-02T05:12:55.193025Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.221798Z", "completed_at": "2024-07-02T05:12:55.221808Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.11175179481506348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_check_regexp_tech_model_address_zip_code___0_9_5_6_.d4fc7b7390", "compiled": true, "compiled_code": "\nSELECT * FROM (select * from \"awsdatacatalog\".\"tech_model\".\"address\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery WHERE not regexp_like(zip_code,'^[0-9]{5,6}$')\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.180393Z", "completed_at": "2024-07-02T05:12:55.198363Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.245843Z", "completed_at": "2024-07-02T05:12:55.245861Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.13135933876037598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_accepted_values_tech_model_request_status__COMPLETE__OB_REQUIRED__TECHNICAL_ERROR.61a2eedb9a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'COMPLETE','OB_REQUIRED','TECHNICAL_ERROR'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.199159Z", "completed_at": "2024-07-02T05:12:55.223276Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.288335Z", "completed_at": "2024-07-02T05:12:55.288345Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.1293811798095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_check_regexp_tech_model_request_channel___a_zA_Z_.b03441606f", "compiled": true, "compiled_code": "\nSELECT * FROM (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery WHERE not regexp_like(channel,'^(?=.*[a-zA-Z]).+$')\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.208164Z", "completed_at": "2024-07-02T05:12:55.256068Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.302046Z", "completed_at": "2024-07-02T05:12:55.302056Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.12583684921264648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_expression_is_true_tech_model_applicant_birth_date___year_CURRENT_DATE_90_year_COLUMN_NAME_and_year_COLUMN_NAME_year_CURRENT_DATE_18_.ac82c1fb0e", "compiled": true, "compiled_code": "\nSELECT * FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery WHERE not ((year(CURRENT_DATE) - 90) <= year(birth_date) and year(birth_date) <= (year(CURRENT_DATE) - 18))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.270721Z", "completed_at": "2024-07-02T05:12:55.306825Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.312751Z", "completed_at": "2024-07-02T05:12:55.312758Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09584307670593262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_applicant_fiscal_code.39c1faf0c8", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      fiscal_code IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      fiscal_code IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.235476Z", "completed_at": "2024-07-02T05:12:55.287653Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.311242Z", "completed_at": "2024-07-02T05:12:55.311251Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.13833069801330566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_address_fiscal_code__type.85fe127ccf", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"address\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      fiscal_code IS NULL\n      \n        OR\n      \n    \n      type IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"address\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(type as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(type as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"address\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      fiscal_code IS NULL\n      \n        OR\n      \n    \n      type IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(type as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(fiscal_code as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(type as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.223904Z", "completed_at": "2024-07-02T05:12:55.285181Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.334260Z", "completed_at": "2024-07-02T05:12:55.334270Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.16930556297302246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_expression_is_true_tech_model_applicant_status_job_role__COLUMN_NAME_791.20c2d23b82", "compiled": true, "compiled_code": "\nSELECT * FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery WHERE not (job_role <= 791)\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.288987Z", "completed_at": "2024-07-02T05:12:55.315470Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.365376Z", "completed_at": "2024-07-02T05:12:55.365385Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17244291305541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_applicant_status_application_id.0a677825ba", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      application_id IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      application_id IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.316056Z", "completed_at": "2024-07-02T05:12:55.349931Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.424175Z", "completed_at": "2024-07-02T05:12:55.424185Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.14211416244506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_application_application_id.d73115e43d", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"application\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      application_id IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"application\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"application\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      application_id IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.335786Z", "completed_at": "2024-07-02T05:12:55.367765Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.425470Z", "completed_at": "2024-07-02T05:12:55.425479Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.12124347686767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_request_credit_management_id__application_id.ee70b494fd", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      credit_management_id IS NULL\n      \n        OR\n      \n    \n      application_id IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      credit_management_id IS NULL\n      \n        OR\n      \n    \n      application_id IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.350876Z", "completed_at": "2024-07-02T05:12:55.392543Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.426071Z", "completed_at": "2024-07-02T05:12:55.426078Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.12473487854003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_block_block_details_id.a49f431e8c", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"block\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      block_details_id IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"block\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"block\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      block_details_id IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.368464Z", "completed_at": "2024-07-02T05:12:55.421696Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.447311Z", "completed_at": "2024-07-02T05:12:55.447322Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.1271066665649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_offer_credit_management_id__offer_id__application_id.9cfb5a2c24", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"offer\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      credit_management_id IS NULL\n      \n        OR\n      \n    \n      offer_id IS NULL\n      \n        OR\n      \n    \n      application_id IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"offer\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(offer_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(offer_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"offer\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      credit_management_id IS NULL\n      \n        OR\n      \n    \n      offer_id IS NULL\n      \n        OR\n      \n    \n      application_id IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(offer_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(credit_management_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(offer_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(application_id as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.382219Z", "completed_at": "2024-07-02T05:12:55.424766Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.460609Z", "completed_at": "2024-07-02T05:12:55.460620Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.12923789024353027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_rule_detail_block_details_id__rule_id__rule_name__origin_data.5add934d91", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_detail\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      block_details_id IS NULL\n      \n        OR\n      \n    \n      rule_id IS NULL\n      \n        OR\n      \n    \n      rule_name IS NULL\n      \n        OR\n      \n    \n      origin_data IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_detail\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_detail\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      block_details_id IS NULL\n      \n        OR\n      \n    \n      rule_id IS NULL\n      \n        OR\n      \n    \n      rule_name IS NULL\n      \n        OR\n      \n    \n      origin_data IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.402678Z", "completed_at": "2024-07-02T05:12:55.429654Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.466989Z", "completed_at": "2024-07-02T05:12:55.466996Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.11559224128723145, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_is_primary_key_tech_model_rule_field_block_details_id__rule_id__rule_name__origin_data__name.c4672123a7", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_field\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      block_details_id IS NULL\n      \n        OR\n      \n    \n      rule_id IS NULL\n      \n        OR\n      \n    \n      rule_name IS NULL\n      \n        OR\n      \n    \n      origin_data IS NULL\n      \n        OR\n      \n    \n      name IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_field\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(name as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(name as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"tech_model\".\"rule_field\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      block_details_id IS NULL\n      \n        OR\n      \n    \n      rule_id IS NULL\n      \n        OR\n      \n    \n      rule_name IS NULL\n      \n        OR\n      \n    \n      origin_data IS NULL\n      \n        OR\n      \n    \n      name IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(name as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(block_details_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(rule_name as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(origin_data as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(name as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.433691Z", "completed_at": "2024-07-02T05:12:55.461460Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.482754Z", "completed_at": "2024-07-02T05:12:55.482764Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08844709396362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_not_null_cbs_offer_selected_n_cbs_offer_selected_n_data_amount.18315fe47e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\nwhere amount is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.448048Z", "completed_at": "2024-07-02T05:12:55.463982Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.484495Z", "completed_at": "2024-07-02T05:12:55.484504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08773350715637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_not_null_cbs_offer_selected_n_cbs_offer_selected_n_data_installmentscnt.7e3b7a79b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect installmentscnt\nfrom (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\nwhere installmentscnt is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.468767Z", "completed_at": "2024-07-02T05:12:55.500618Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.531767Z", "completed_at": "2024-07-02T05:12:55.531778Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.09709024429321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_not_null_cbs_offer_selected_n_cbs_offer_selected_n_data_taeg.f3e911c82d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect taeg\nfrom (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\nwhere taeg is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.485197Z", "completed_at": "2024-07-02T05:12:55.529372Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.567543Z", "completed_at": "2024-07-02T05:12:55.567553Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10899019241333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_cbs_offer_selected_n_cbs_offer_selected_n_data_applicationid__application_id__source_tech_model_application_.706fc76e39", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select applicationid as from_field\n    from (select * from \"awsdatacatalog\".\"cbs_offer_selected_n\".\"cbs_offer_selected_n_data\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where applicationid is not null\n),\n\nparent as (\n    select application_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"application\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.495633Z", "completed_at": "2024-07-02T05:12:55.530876Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.569508Z", "completed_at": "2024-07-02T05:12:55.569518Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.11909031867980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_address_fiscal_code__fiscal_code__source_tech_model_applicant_.58c0fb9f68", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select fiscal_code as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"address\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where fiscal_code is not null\n),\n\nparent as (\n    select fiscal_code as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"applicant\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.513059Z", "completed_at": "2024-07-02T05:12:55.552014Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.583294Z", "completed_at": "2024-07-02T05:12:55.583305Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.10956645011901855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_applicant_status_application_id__application_id__source_tech_model_application_.cfc2e3243b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select application_id as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"applicant_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where application_id is not null\n),\n\nparent as (\n    select application_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"application\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.533109Z", "completed_at": "2024-07-02T05:12:55.566866Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.587417Z", "completed_at": "2024-07-02T05:12:55.587427Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11876106262207031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_application_fiscal_code__fiscal_code__source_tech_model_applicant_.37df04b38b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select fiscal_code as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"application\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where fiscal_code is not null\n),\n\nparent as (\n    select fiscal_code as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"applicant\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.542788Z", "completed_at": "2024-07-02T05:12:55.572471Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.603176Z", "completed_at": "2024-07-02T05:12:55.603186Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08053874969482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_hubspot_contacts_application_id__application_id__source_tech_model_application_.eea6fa19bf", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select application_id as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"hubspot_contacts\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where application_id is not null\n),\n\nparent as (\n    select application_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"application\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.554678Z", "completed_at": "2024-07-02T05:12:55.571308Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.606291Z", "completed_at": "2024-07-02T05:12:55.606299Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.08738422393798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_block_credit_management_id__credit_management_id__source_tech_model_request_.a175c0eedd", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select credit_management_id as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"block\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where credit_management_id is not null\n),\n\nparent as (\n    select credit_management_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"request\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.574427Z", "completed_at": "2024-07-02T05:12:55.592052Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.614064Z", "completed_at": "2024-07-02T05:12:55.614073Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1027686595916748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_request_application_id__application_id__source_tech_model_application_.f7ebe9b58b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select application_id as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"request\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where application_id is not null\n),\n\nparent as (\n    select application_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"application\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.592882Z", "completed_at": "2024-07-02T05:12:55.609783Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.673223Z", "completed_at": "2024-07-02T05:12:55.673235Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.09912490844726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.source_relationships_tech_model_rule_detail_block_details_id__block_details_id__source_tech_model_block_.e34cdda697", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select block_details_id as from_field\n    from (select * from \"awsdatacatalog\".\"tech_model\".\"rule_detail\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    where block_details_id is not null\n),\n\nparent as (\n    select block_details_id as to_field\n    from \"awsdatacatalog\".\"tech_model\".\"block\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.618023Z", "completed_at": "2024-07-02T05:12:55.685569Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.759895Z", "completed_at": "2024-07-02T05:12:55.759910Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.16016316413879395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"data_monitoring_metrics\"\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    date_add('day', cast(-7 as INTEGER), coalesce(\n        try_cast(date_trunc('day', CURRENT_TIMESTAMP) as timestamp),\n        cast(from_iso8601_timestamp(cast(date_trunc('day', CURRENT_TIMESTAMP) AS varchar)) AS timestamp)\n    ))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"metrics_anomaly_score\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.655967Z", "completed_at": "2024-07-02T05:12:55.718379Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.762613Z", "completed_at": "2024-07-02T05:12:55.762621Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1643507480621338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.conte_it_dbt_data_quality.application_status", "compiled": true, "compiled_code": "\n\n-- 1) Calcolare model_execution_timestamp = timestamp_now()   current_timestamp\n-- 2) Leggere da L2 where max(\"awsdatacatalog\".\"business_model\".\"application_status\".model_execution_timestamp) < last_update < model_execution_timestamp di riga 1\n-- 3) Salvarsi model_execution_timestamp della riga 1 nelle righe che abbiamo appena scritto nel modello\n\nwith\n\nmodel_current_execution_timestamp as (\n    select cast(current_timestamp as timestamp(6)) as current_execution_timestamp\n),\n\n\nmodel_last_execution_timestamp as (\n        select max(execution_timestamp) as last_execution_timestamp\n        from \"awsdatacatalog\".\"business_model\".\"application_status\"\n),\n\n\nnotification_n_data as (\n    select\n        user_id,\n        application_id,\n        current_status as status,\n        date as status_timestamp,\n        last_update,\n        current_execution_timestamp,\n        reference_date,\n        year,\n        month,\n        day\n    from \"awsdatacatalog\".\"notifications_n\".\"stg_notification_n_data\"\n    CROSS JOIN model_current_execution_timestamp\n\n    \n        CROSS JOIN model_last_execution_timestamp\n        where \"awsdatacatalog\".\"notifications_n\".\"stg_notification_n_data\".last_update between last_execution_timestamp and current_execution_timestamp\n    \n),\n\nexelab_hubspot_n_step_checkpoint as (\n    select\n        id as user_id,\n        application_id,\n        step_checkpoint as status,\n        timestamp as status_timestamp,\n        last_update,\n        current_execution_timestamp,\n        reference_date,\n        year,\n        month,\n        day\n    from \"awsdatacatalog\".\"exelab_hubspot_n\".\"stg_exelab_hubspot_n_step_checkpoints\"\n    CROSS JOIN model_current_execution_timestamp\n\n    \n        CROSS JOIN model_last_execution_timestamp\n        where \"awsdatacatalog\".\"exelab_hubspot_n\".\"stg_exelab_hubspot_n_step_checkpoints\".last_update between last_execution_timestamp and current_execution_timestamp\n    \n),\n\nunfiltered_model as (\n    SELECT * FROM notification_n_data\n    UNION ALL\n    SELECT * FROM exelab_hubspot_n_step_checkpoint\n),\n\nkey_with_max_last_update_model AS (\n    SELECT * FROM (\n    SELECT\n        user_id,\n        application_id,\n        status,\n        status_timestamp,\n        last_update,\n        current_execution_timestamp,\n        reference_date,\n        year,\n        month,\n        day,\n        ROW_NUMBER() OVER (PARTITION BY user_id, status, status_timestamp ORDER BY last_update DESC, reference_date DESC) AS row_num\n        FROM unfiltered_model\n        ) x where row_num = 1\n)\n\n\nSELECT distinct\n   user_id,\n   application_id,\n   status,\n   cast(status_timestamp as timestamp(6)) as status_timestamp,\n   current_execution_timestamp as execution_timestamp,\n   reference_date,\n   year,\n   month,\n   day\nFROM key_with_max_last_update_model", "relation_name": "\"awsdatacatalog\".\"business_model\".\"application_status\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.674558Z", "completed_at": "2024-07-02T05:12:55.694221Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.763239Z", "completed_at": "2024-07-02T05:12:55.763246Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.15816020965576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"data_monitoring_metrics\"\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"monitors_runs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.687440Z", "completed_at": "2024-07-02T05:12:55.759161Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.770119Z", "completed_at": "2024-07-02T05:12:55.770128Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.14262032508850098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_run_results\"\n),\n\ndbt_snapshots as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_snapshots\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"snapshot_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.704648Z", "completed_at": "2024-07-02T05:12:55.761397Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.782743Z", "completed_at": "2024-07-02T05:12:55.782757Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.20982003211975098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_run_results\"\n),\n\ndbt_models as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_models\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"model_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.694954Z", "completed_at": "2024-07-02T05:12:55.762080Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.808422Z", "completed_at": "2024-07-02T05:12:55.808437Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14480042457580566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_source_freshness_results\"\n),\n\nsources as (\n  select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_sources\"\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  coalesce(\n        try_cast(results.generated_at as timestamp),\n        cast(from_iso8601_timestamp(cast(results.generated_at AS varchar)) AS timestamp)\n    ) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"alerts_dbt_source_freshness\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.720009Z", "completed_at": "2024-07-02T05:12:55.764490Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.824399Z", "completed_at": "2024-07-02T05:12:55.824407Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.21764469146728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n as job_run_started_at,\n    \nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n as job_run_completed_at,\n    \n    (((((to_milliseconds((CAST(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP) AS DATE) - CAST(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP) AS DATE)))) / 86400000) * 24 + hour(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP)) - hour(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP))) * 60 + minute(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP)) - minute(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP))) * 60 + second(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP)) - second(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n as timestamp),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as timestamp),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS timestamp)\n    ))\n AS varchar)) AS timestamp)\n    ) AS TIMESTAMP)))\n as job_run_execution_time\n  from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_invocations\"\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"job_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.866832Z", "completed_at": "2024-07-02T05:12:55.922997Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.950779Z", "completed_at": "2024-07-02T05:12:55.950790Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.13757586479187012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"elementary_test_results\"\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"alerts_schema_changes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.860614Z", "completed_at": "2024-07-02T05:12:55.948655Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.970990Z", "completed_at": "2024-07-02T05:12:55.971000Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1426410675048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"elementary_test_results\"\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"alerts_dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.838881Z", "completed_at": "2024-07-02T05:12:55.892767Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.981959Z", "completed_at": "2024-07-02T05:12:55.981969Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.15799355506896973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"elementary_test_results\"\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"alerts_anomaly_detection\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.952729Z", "completed_at": "2024-07-02T05:12:55.981234Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.998355Z", "completed_at": "2024-07-02T05:12:55.998364Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14832520484924316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from \"awsdatacatalog\".\"dbt_models_elementary\".\"metrics_anomaly_score\"\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"anomaly_threshold_sensitivity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.913698Z", "completed_at": "2024-07-02T05:12:55.949303Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:55.973024Z", "completed_at": "2024-07-02T05:12:55.973032Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.12413668632507324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_models\"\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_tests\"\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_sources\"\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_snapshots\"\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_metrics\"\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_exposures\"\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_seeds\"\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_columns\"\n\n\norder by metadata_hash", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_artifacts_hashes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.923939Z", "completed_at": "2024-07-02T05:12:55.968792Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:56.002955Z", "completed_at": "2024-07-02T05:12:56.002964Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.1671590805053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: \"awsdatacatalog\".\"dbt_models_elementary\".\"elementary_test_results\"\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_row\n\n,\n                cast('2091-02-17' as timestamp(6)) as detected_at\n\n,\n                cast('2091-02-17' as timestamp(6)) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"test_result_rows\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.988488Z", "completed_at": "2024-07-02T05:12:56.001948Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:56.033337Z", "completed_at": "2024-07-02T05:12:56.033346Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.056259870529174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_volume_anomalies_application_status_day__7__reference_date.3086abe6b3", "compiled": true, "compiled_code": "\n  \n\n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.939744Z", "completed_at": "2024-07-02T05:12:55.963350Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:56.035968Z", "completed_at": "2024-07-02T05:12:56.035978Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1493065357208252, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.elementary_freshness_anomalies_application_status_day__7__reference_date.b850d63b12", "compiled": true, "compiled_code": "\n  \n  \n    \n\n        \n        \n    with nothing as (select 1 as num)\n    select * from nothing where num = 2\n\n\n    \n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:56.010281Z", "completed_at": "2024-07-02T05:12:56.037028Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:56.041425Z", "completed_at": "2024-07-02T05:12:56.041432Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04597043991088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.conte_it_dbt_data_quality.is_primary_key_application_status_user_id__status__status_timestamp.6e605d7093", "compiled": true, "compiled_code": "\nWITH count_column_null AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"business_model\".\"application_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n  \n  (\n    \n      user_id IS NULL\n      \n        OR\n      \n    \n      status IS NULL\n      \n        OR\n      \n    \n      status_timestamp IS NULL\n      \n    \n  )\n),\ncount_duplicate AS (\n  SELECT *\n  FROM (select * from \"awsdatacatalog\".\"business_model\".\"application_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n  WHERE\n\n  \n\n  lower(to_hex(md5(to_utf8(cast(coalesce(cast(user_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status_timestamp as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar))))) IN (\n    SELECT lower(to_hex(md5(to_utf8(cast(coalesce(cast(user_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status_timestamp as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    FROM (select * from \"awsdatacatalog\".\"business_model\".\"application_status\" where cast(concat(year, '-', month, '-', day) as date) <= cast('2024-07-01' as date) and cast(concat(year, '-', month, '-', day) as date) >= cast('2024-06-02' as date)) dbt_subquery\n    WHERE\n\n    \n\n    NOT(\n    \n      user_id IS NULL\n      \n        OR\n      \n    \n      status IS NULL\n      \n        OR\n      \n    \n      status_timestamp IS NULL\n      \n    )\n    GROUP BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(user_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status_timestamp as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n    HAVING COUNT(*) > 1\n  )\n)\n\nSELECT *\nFROM count_column_null\nUNION ALL\nSELECT *\nFROM count_duplicate\nORDER BY lower(to_hex(md5(to_utf8(cast(coalesce(cast(user_id as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status as VARCHAR), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(status_timestamp as VARCHAR), '_dbt_utils_surrogate_key_null_') as varchar)))))\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:56.005066Z", "completed_at": "2024-07-02T05:12:56.037847Z"}, {"name": "execute", "started_at": "2024-07-02T05:12:56.043697Z", "completed_at": "2024-07-02T05:12:56.043704Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.06006217002868652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from \"awsdatacatalog\".\"dbt_models_elementary\".\"model_run_results\"\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from \"awsdatacatalog\".\"dbt_models_elementary\".\"snapshot_run_results\"\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       coalesce(\n        try_cast(generated_at as timestamp),\n        cast(from_iso8601_timestamp(cast(generated_at AS varchar)) AS timestamp)\n    ) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"alerts_dbt_models\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:12:55.772370Z", "completed_at": "2024-07-02T05:13:14.764289Z"}, {"name": "execute", "started_at": "2024-07-02T05:13:14.765551Z", "completed_at": "2024-07-02T05:13:14.765562Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 19.048009872436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.information_schema_columns", "compiled": true, "compiled_code": "\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_models\"\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_snapshots\"\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_sources\"\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_seeds\"\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n            union all\n        \n    \n        (\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n\n        ) as empty_table\n        where 1 = 0\n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"information_schema_columns\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-02T05:13:14.770214Z", "completed_at": "2024-07-02T05:13:14.778430Z"}, {"name": "execute", "started_at": "2024-07-02T05:13:14.779500Z", "completed_at": "2024-07-02T05:13:14.779509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011525869369506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.enriched_columns", "compiled": true, "compiled_code": "\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from \"awsdatacatalog\".\"dbt_models_elementary\".\"information_schema_columns\"\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from \"awsdatacatalog\".\"dbt_models_elementary\".\"dbt_columns\"\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)", "relation_name": "\"awsdatacatalog\".\"dbt_models_elementary\".\"enriched_columns\""}], "elapsed_time": 23.8699688911438, "args": {"warn_error_options": {"include": [], "exclude": []}, "send_anonymous_usage_stats": true, "populate_cache": true, "log_level": "info", "favor_state": false, "log_path": "/dbt/logs", "log_format_file": "debug", "exclude": [], "version_check": true, "project_dir": "/dbt", "defer": false, "static": false, "strict_mode": false, "print": true, "cache_selected_only": false, "log_format": "default", "macro_debugging": false, "introspect": true, "require_explicit_package_overrides_for_builtin_materializations": false, "log_level_file": "debug", "show_resource_report": false, "static_parser": true, "partial_parse_file_diff": true, "indirect_selection": "eager", "invocation_command": "dbt docs generate", "quiet": false, "compile": true, "partial_parse": true, "empty_catalog": false, "enable_legacy_logger": false, "log_file_max_bytes": 10485760, "which": "generate", "select": [], "use_colors_file": true, "use_colors": true, "write_json": true, "vars": {}, "printer_width": 80, "profiles_dir": "/dbt//profiles"}}